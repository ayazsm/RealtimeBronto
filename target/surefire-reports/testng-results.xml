<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="1" passed="0" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-07T13:04:55Z" name="Suite" finished-at="2021-09-07T13:04:55Z" duration-ms="93">
    <groups>
    </groups>
    <test started-at="2021-09-07T13:04:55Z" name="Test" finished-at="2021-09-07T13:04:55Z" duration-ms="93">
      <class name="test.PatientLoginTest">
        <test-method is-config="true" signature="initialize()[pri:0, instance:test.PatientLoginTest@7393222f]" started-at="2021-09-07T18:34:55Z" name="initialize" finished-at="2021-09-07T18:34:55Z" duration-ms="0" status="FAIL">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\usr\bin\chromedriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\usr\bin\chromedriver
	at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)
	at pages.TestBase.initialize(TestBase.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="loginTest()[pri:0, instance:test.PatientLoginTest@7393222f]" started-at="2021-09-07T18:34:55Z" name="loginTest" finished-at="2021-09-07T18:34:55Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="TeardownTest()[pri:0, instance:test.PatientLoginTest@7393222f]" started-at="2021-09-07T18:34:55Z" name="TeardownTest" finished-at="2021-09-07T18:34:55Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TeardownTest -->
      </class> <!-- test.PatientLoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
